§ -------------------------------------------------------------
§  descriptions
§ -------------------------------------------------------------

== Comments.end-of-line-comment == append, nomenu ==
/* <CURSOR> */
== Comments.frame == map:cfr, shortcut:f  ==
/*!
 *  <CURSOR>
 */
== Comments.function == map:cfu, shortcut:f  ==
/*!
 *  \brief  |DESCRIPTION|<CURSOR>
 *  
 *  \param  <+NAME+> <+DESCRIPTION+>
 *  \return <+DESCRIPTION+>
 *  <+DETAILED+>
 */
== Comments.method == map:cme, shortcut:m  ==
/*!
 *  \brief  |DESCRIPTION|<CURSOR>
 *  
 *  \param  <+NAME+> <+DESCRIPTION+>
 *  \return <+DESCRIPTION+>
 *  <+DETAILED+>
 */
== Comments.class == map:ccl, shortcut:c  ==
/*!
 *  \brief  |DESCRIPTION|<CURSOR>
 *  
 *  {+DETAILED+}
 */
== Comments.file description impl == map:cfdi, shortcut:c, start, noindent ==
/*!
 *    \file  |FILENAME|
 *   \brief  |DESCRIPTION|<CURSOR>
 *  
 *  <+DETAILED+>
 *  
 *  \author  |AUTHOR| (|AUTHORREF|), |EMAIL|
 *  
 *  \internal
 *       Created:  |DATE|
 *      Revision:  none
 *      Compiler:  gcc
 *  Organization:  |ORGANIZATION|
 *     Copyright:  |COPYRIGHT|
 *  
 *  This source code is released for free distribution under the terms of the
 *  GNU General Public License as published by the Free Software Foundation.
 */

== Comments.file description header == map:cfdh, shortcut:h, start, noindent ==
/*!
 *    \file  |FILENAME|
 *   \brief  |DESCRIPTION|<CURSOR>
 *  
 *  <+DETAILED+>
 *  
 *  \author  |AUTHOR| (|AUTHORREF|), |EMAIL|
 *  
 *  \internal
 *       Created:  |DATE|
 *      Revision:  none
 *      Compiler:  gcc
 *  Organization:  |ORGANIZATION|
 *     Copyright:  |COPYRIGHT|
 *  
 *  This source code is released for free distribution under the terms of the
 *  GNU General Public License as published by the Free Software Foundation.
 */

== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  special Doxygen sub-menu
§ -------------------------------------------------------------

MenuShortcut( 'Comments.Doxygen',  'd' )

== Comments.Doxygen.description == below, map:cdd, sc:d ==
/*!
 *  \brief  <CURSOR>
 */
== Comments.Doxygen.overwrite == below, map:cdo, sc:o ==
/*!
 *  \overwrite
 */
== Comments.Doxygen.brief == below, map:cdb, sc:b ==
 *  \brief  <CURSOR>
== Comments.Doxygen.template parameter == below, map:cdt, sc:t ==
 *  \tparam <CURSOR>
== Comments.Doxygen.parameter == below, map:cdp, sc:p ==
 *  \param  <CURSOR>
== Comments.Doxygen.return == below, map:cdr, sc:r ==
 *  \return <CURSOR>
== Comments.Doxygen.exception == below, map:cde, sc:e ==
 *  \throw  <CURSOR>
== Comments.Doxygen.brief, after member == append, map:cda, sc:a ==
   /*!< \brief <CURSOR> */
== Comments.Doxygen.defgroup == below, sc:g ==
/*!
 *  \defgroup |?DOXYGEN_GROUP|
 *  
 *  \brief    <CURSOR>
 *  
 *  <+DETAILED+>
 */
== Comments.Doxygen.addtogroup, start == below, sc:g ==
/*!
 *  \addtogroup |?DOXYGEN_GROUP|
 *  @{
 */
== Comments.Doxygen.addtogroup, end == below, sc:g ==
/*!
 *  @}
 */
== Comments.Doxygen.ingroup == below, map:cdg, sc:i ==
 *  \ingroup |?DOXYGEN_GROUP|
 *  
== Comments.Doxygen.LaTeX formula, in-text == insert, map:cfs, sc:l ==
\f$ <CURSOR><SPLIT> \f$
== Comments.Doxygen.LaTeX formula, separate == below, map:cfl, sc:l ==
 *  \f[
 *    <CURSOR><SPLIT>
 *  \f]
== Comments.Doxygen.LaTeX formula, environment == below, map:cfe, sc:l ==
 *  \f{<CURSOR>}{
 *    <SPLIT>{-FORMULA-}
 *  \f}
== ENDTEMPLATE ==

§ -------------------------------------------------------------
§  lists
§ -------------------------------------------------------------

== Comments.C file sections  == expandmenu, append, map:ccs, shortcut:s ==
|PickList( 'C file sections', 'comments_c_sections' )|
/* #####   |PICK|#################### */<CURSOR>
== Comments.H file sections  == expandmenu, append, map:chs, shortcut:s ==
|PickList( 'H file sections', 'comments_h_sections' )|
/* #####   |PICK|######################################## */<CURSOR>
== Comments.keyword comments == expandmenu, append, map:ckc, shortcut:k ==
|PickList( 'keyword comments', 'comments_keywords' )|
 /* |PICK| <CURSOR> */
== Comments.special comments == expandmenu, append, map:csc, shortcut:s ==
|PickList( 'special comments', 'comments_special' )|
 /* |PICK| */<CURSOR>
== Comments.macros == expandmenu, insert, map:cma, shortcut:m ==
|PickList( 'macro', 'comments_macros' )|
||PICK||<CURSOR>
== ENDTEMPLATE ==

