*toolboxdoxygen.txt*              Doxygen Tool                     Nov 10 2013

Doxygen Tool                                                 *toolbox-doxygen*

                             Plug-in version 0.9   
                        for Vim version 7.0 and above
                 Wolfgang Mehner <wolfgang-mehner at web.de>

The Doxygen tool integrates Doxygen. After generating a documentation, the
errors can be displayed in a quickfix list at any time. The tool assists with
generating Doxygen configuration files and with handling other Doxygen-related
files.

==============================================================================
0.  TABLE OF CONTENTS                               *toolbox-doxygen-contents*
==============================================================================

 1.    Introduction                               |toolbox-doxygen-intro|
 2.    Commands                                   |toolbox-doxygen-commands|
 2.1    API                                       |toolbox-doxygen-api|
 3.    Configuration                              |toolbox-doxygen-config|

 A.    Troubleshooting - Known Issues             |toolbox-doxygen-trouble|

==============================================================================
1.  INTRODUCTION                                       *toolbox-doxygen-intro*
==============================================================================

As a first step, the Doxygen configuration file can be set using the ex-
command |:DoxygenConfigFile|: >
  :DoxygenConfigFile ./Doxyfile
This file will now be used, independently of the working directory, Now
Doxygen can be run via |:Doxygen|. Afterwards, the errors are displayed in a
|quickfix| list. They can be shown later using |:DoxygenErrors|.

A new configuration file can be generated using |:DoxygenGenerateConfig|. The
user is prompted for a location and name of the new config file. This file is
then generated and its name stored as it would be using |:DoxygenConfigFile|.
The file can be conveniently accessed later via |:DoxygenEditConfig|.

Whenever Doxygen is run, the output is written into log files. Under Windows,
the log and the warnings are written into the file configured via
|:DoxygenLogFile|. If the option 'WARN_LOGFILE' is set in the Doxygen config
file, the name of the error file is automatically recognized.

Under Linux, the output is split into the |:DoxygenLogFile| and the
|:DoxygenErrorFile|. If the option 'WARN_LOGFILE' is set in the Doxygen config
file, the name of the error file is automatically recognized. Then the
quickfix lists generated by |:Doxygen| and |:DoxygenErrors| will read the errors
from this file.

  Command                       Short Description
 ----------------------------------------------------------------------------
  |:Doxygen| [<args>]             run Doxygen with the given arguments

  |:DoxygenConfigFile| [<file>]   set the configuration file
  |:DoxygenErrorFile| [<file>]    set the error file
  |:DoxygenLogFile| [<file>]      set the log file

  |:DoxygenGenerateConfig|        generate a configuration file
  |:DoxygenEditConfig|            edit the configuration file
  |:DoxygenViewLog|               view the log file
  |:DoxygenErrors|                |quickfix| list for Doxygen errors
  |:DoxygenHelp|                  help for the Doxygen tool
 ----------------------------------------------------------------------------

Detailed explanations are given in the next section |toolbox-doxygen-commands|.

==============================================================================
2.  COMMANDS                                        *toolbox-doxygen-commands*
==============================================================================

This chapter provides detailed explanations of all the commands.

------------------------------------------------------------------------------
                                                                    *:Doxygen*
  :Doxygen [<args>] ~

Runs Doxygen. If called without arguments, uses the config file set via
|:DoxygenConfigFile|. The output produced by Doxygen is written into the log
file (see |:DoxygenViewLog| and |:DoxygenLogFile|) and the error file (see
|:DoxygenErrors| and |:DoxygenErrorFile|). Under Windows, the log file may
also contain the error messages.
The errors are then read back from the error file (see |:DoxygenErrorFile|) to
produce a |quickfix| list. The errors can also be viewed later using
|:DoxygenErrors|.
If an error file is set in the Doxyfile configuration file (option
"WARN_LOGFILE"), it is recognized and used as the error file.

------------------------------------------------------------------------------
                                                          *:DoxygenConfigFile*
  :DoxygenConfigFile [<file>] ~

Sets the Doxygen configuration file. If a specific file has been selected, it
is always used, independent of the current working directory. The directory of
the file is used as the working directory for running Doxygen (see |:Doxygen|).

  :DoxygenConfigFile! ~

Echoes the current configuration file on the command line.

------------------------------------------------------------------------------
                                                           *:DoxygenErrorFile*
  :DoxygenErrorFile [<file>] ~

Sets the Doxygen error file. If a specific file has been selected, it is
always used, independent of the current working directory. The file is used to
read the errors for |:DoxygenErrors|.

  :DoxygenErrorFile! ~

Echoes the current error file on the command line.

------------------------------------------------------------------------------
                                                             *:DoxygenLogFile*
  :DoxygenLogFile [<file>] ~

Sets the Doxygen log file. If a specific file has been selected, it is always
used, independent of the current working directory. The file can be viewed by
calling |:DoxygenViewLog|.

  :DoxygenLogFile! ~

Echoes the current log file on the command line.

------------------------------------------------------------------------------
                                                      *:DoxygenGenerateConfig*
  :DoxygenGenerateConfig ~

The user is asked to pick a location and name for a new config file, which is
then generated automatically. Upon successful completion, the name of the
config file is set as it would be using |:DoxygenConfigFile|.

------------------------------------------------------------------------------
                                                          *:DoxygenEditConfig*
  :DoxygenEditConfig ~

Opens the configuration file set via |:DoxygenConfigFile| for editing.

------------------------------------------------------------------------------
                                                             *:DoxygenViewLog*
  :DoxygenViewLog ~

Views the log file set via |:DoxygenLogFile|.

------------------------------------------------------------------------------
                                                              *:DoxygenErrors*
  :DoxygenErrors ~

Reads the errors from the error file set via |:DoxygenErrorFile| and generates
a |quickfix| list.

------------------------------------------------------------------------------
                                                                *:DoxygenHelp*
  :DoxygenHelp ~

Opens the help for the Doxygen tool.

If the tool is not working properly, prints the reason.

------------------------------------------------------------------------------
2.1  API                                                 *toolbox-doxygen-api*
------------------------------------------------------------------------------

The various filenames can be set via an API. This allows for setting up the
configuration via a script.

------------------------------------------------------------------------------
                                                  *mmtoolbox#doxygen#Property*
The filenames can be set using:

  mmtoolbox#doxygen#Property ( mode, key [, value] ) ~

Parameters:
  mode  - "echo", "get" or "set" (string)
  key   - the name of one of the properties (string)
  value - the new value of the property,
          only with mode "set" (string, optional)
Returns:
  value - the current value of the property,
          only with mode "get" (various)

The property is one of the following:
  "enabled"     - non-zero if the tool is enabled (integer, no "set")
  "config-file" - the configuration file (string)
  "error-file"  - the error file (string)
  "log-file"    - the log file (string)

To set the configuration file for a project, use: >
  call mmtoolbox#doxygen#Property ( "set",
      \ "config-file", "$HOME/Projects/MyProject/doc/Doxyfile" )
<
To set the error file: >
  call mmtoolbox#doxygen#Property ( "set", "error-file",
      \ "$HOME/Projects/MyProject/doc/doxy_warnings.txt" )
This requires the Doxygen configuration file to include the following line: >
  WARN_LOGFILE = "doxy_warnings.txt"
<
==============================================================================
3.  CONFIGURATION                                     *toolbox-doxygen-config*
==============================================================================

The tool is configured via a number of global variables, which can be set in
the .vimrc file.

  Variable                  Default       Description and further information
 ----------------------------------------------------------------------------
  |g:Doxygen_Executable|      'doxygen'     the Doxygen executable
 ----------------------------------------------------------------------------

------------------------------------------------------------------------------
                                                        *g:Doxygen_Executable*
The executable is set by g:Doxygen_Executable: >
  let g:Doxygen_Executable = 'doxygen'
<

==============================================================================
A.  TROUBLESHOOTING - KNOWN ISSUES                   *toolbox-doxygen-trouble*
==============================================================================

* Under Windows, some warning messages are not recognized correctly, and the
  quickfix list generated by :Doxygen or :DoxygenErrors contains file which
  are non-existent.
  - This seems to be a problem of Doxygen, the log output and the error
    messages are not separated correctly.
  - Workaround: Set the option "WARN_LOGFILE" in the Doxygen config file.

==============================================================================
vim:tw=78:noet:ts=2:ft=help:norl:expandtab:
